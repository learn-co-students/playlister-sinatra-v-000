 post '/songs' do
        if  Artist.find(:name => params['Artist Name'])
            @song = Song.create_by(:name => params['Name'])
            @song.genre_ids = params[:genres]
            @song.save
            redirect("/songs/#{@song.slug}")
        else
            @song = Song.create(:name => params['Name'])
            @song.artist = Artist.create(:name => params['Artist Name'])
            @song.genre_ids = params[:genres]
            @song.save
            redirect("/songs/#{@song.slug}")
            # flash[:message] = "Successfully created song."
        end<ul>
  <% @artist.songs.each do |song| %>
    <li><a href="/songs/<%= song.slug %>"><%= song.name %> </a></li>
  <% end %>
</ul>
<%# binding.pry %>
<ul>
  <% @artist.genres.each do |genre| %>
    <li><a href="/genres/<%= genre.slug %>"><%= genre.name %> </a></li>
  <% end %>
</ul>


bundle exec rake db:create_migration NAME=create_


You should build the following routes:

/songs
This should present the user with a list of all songs in the library.
Each song should be a clickable link to that particular song's show page.

/genres
This should present the user with a list of all genres in the library.
Each genre should be a clickable link to that particular genre's show page.

/artists
This should present the user with a list of all artists in the library.
Each artist should be a clickable link to that particular artist's show page.

/songs/:slug
Any given song's show page should have links to that song's artist and the each genre associated with the song.
Pay attention to the order of /songs/new and /songs/:slug. The route /songs/new could interpret new as a slug if that controller action isn't defined first.

/artists/:slug
Any given artist's show page should have links to each of his or her songs and genres.

/genres/:slug
Any given genre's show page should have links to each of its artists and songs.
To get the data into your database, you will want to figure out how to use your LibraryParser class in the db/seeds.rb file.

